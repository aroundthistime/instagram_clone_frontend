[{"C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\index.js":"1","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\reportWebVitals.js":"2","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\App.js":"3","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Styles\\GlobalStyles.js":"4","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Styles\\Theme.js":"5","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Router.js":"6","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Routes\\Feed.js":"7","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Apollo\\Client.js":"8","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Apollo\\LocalState.js":"9","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Input.js":"10","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Button.js":"11","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Hooks\\useInput.js":"12","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Hooks\\useInputCheckingValid.js":"13","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Routes\\Auth\\index.js":"14","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Routes\\Auth\\AuthContainer.js":"15","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Routes\\Auth\\AuthPresenter.js":"16","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Routes\\Auth\\AuthInputValidators.js":"17","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Routes\\Auth\\AuthQueries.js":"18","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Footer.js":"19","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Hooks\\useTimer.js":"20","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Header.js":"21","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Icons.js":"22","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Routes\\Profile.js":"23","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Routes\\Explore.js":"24","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Routes\\Search.js":"25","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Loader.js":"26","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Routes\\Post.js":"27","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Avatar.js":"28","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Post\\index.js":"29","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Post\\PostContainer.js":"30","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Post\\PostPresenter.js":"31","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\utils.js":"32","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Username.js":"33","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Post\\PostQueries.js":"34","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Hooks\\useSlide.js":"35"},{"size":801,"mtime":1609942047853,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":1041,"mtime":1610704749816,"results":"39","hashOfConfig":"37"},{"size":692,"mtime":1610695005013,"results":"40","hashOfConfig":"37"},{"size":553,"mtime":1610690213081,"results":"41","hashOfConfig":"37"},{"size":965,"mtime":1610699176621,"results":"42","hashOfConfig":"37"},{"size":1758,"mtime":1610880035743,"results":"43","hashOfConfig":"37"},{"size":331,"mtime":1610700040941,"results":"44","hashOfConfig":"37"},{"size":535,"mtime":1610121724722,"results":"45","hashOfConfig":"37"},{"size":1016,"mtime":1610694897618,"results":"46","hashOfConfig":"37"},{"size":531,"mtime":1610008178380,"results":"47","hashOfConfig":"37"},{"size":292,"mtime":1610016990781,"results":"48","hashOfConfig":"37"},{"size":2019,"mtime":1610032852231,"results":"49","hashOfConfig":"37"},{"size":75,"mtime":1610025073584,"results":"50","hashOfConfig":"37"},{"size":4492,"mtime":1610690019233,"results":"51","hashOfConfig":"37"},{"size":5280,"mtime":1610121851922,"results":"52","hashOfConfig":"37"},{"size":267,"mtime":1610027926951,"results":"53","hashOfConfig":"37"},{"size":822,"mtime":1610110613387,"results":"54","hashOfConfig":"37"},{"size":392,"mtime":1610707984841,"results":"55","hashOfConfig":"37"},{"size":2142,"mtime":1610122054528,"results":"56","hashOfConfig":"37"},{"size":3658,"mtime":1610879976175,"results":"57","hashOfConfig":"37"},{"size":3886,"mtime":1610877503017,"results":"58","hashOfConfig":"37"},{"size":31,"mtime":1609940767645,"results":"59","hashOfConfig":"37"},{"size":31,"mtime":1609940754478,"results":"60","hashOfConfig":"37"},{"size":30,"mtime":1610697510257,"results":"61","hashOfConfig":"37"},{"size":410,"mtime":1610708380277,"results":"62","hashOfConfig":"37"},{"size":28,"mtime":1609940762676,"results":"63","hashOfConfig":"37"},{"size":509,"mtime":1610723358880,"results":"64","hashOfConfig":"37"},{"size":75,"mtime":1610716031146,"results":"65","hashOfConfig":"37"},{"size":4309,"mtime":1610896797541,"results":"66","hashOfConfig":"37"},{"size":10346,"mtime":1610895267436,"results":"67","hashOfConfig":"37"},{"size":851,"mtime":1610802171967,"results":"68","hashOfConfig":"37"},{"size":456,"mtime":1610895245808,"results":"69","hashOfConfig":"37"},{"size":588,"mtime":1610891869170,"results":"70","hashOfConfig":"37"},{"size":2223,"mtime":1610879017185,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1cwiyjb",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"74"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"74"},"C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\index.js",[],["159","160"],"C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\reportWebVitals.js",[],"C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\App.js",[],"C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Styles\\GlobalStyles.js",[],"C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Styles\\Theme.js",["161"],"const BOX_BORDER = \"1px solid #e6e6e6\";\r\nconst BORDER_RADIUS = \"4px\";\r\n\r\nexport default {\r\n    maxWidth : \"935px\",\r\n    bgColor: \"#FAFAFA\",\r\n    blackColor: \"#262626\",\r\n    darkGrayColor: \"#999\",\r\n    lightGrayColor: \"#c7c7c7\",\r\n    redColor: \"#ED4956\",\r\n    blueColor: \"#3897f0\",\r\n    darkBlueColor: \"#003569\",\r\n    greenColor : \"#59D00A\",\r\n    boxBorder: \"1px solid #e6e6e6\",\r\n    borderRadius: \"4px\",\r\n    whiteBox: `border : ${BOX_BORDER};\r\n               border-radius : ${BORDER_RADIUS};\r\n               background-color:white;\r\n              `\r\n}","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Router.js",["162"],"import PropTypes from \"prop-types\";\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from \"../Routes/Auth/index\";\r\nimport Feed from \"../Routes/Feed\";\r\nimport Profile from \"../Routes/Profile\";\r\nimport Explore from \"../Routes/Explore\"\r\nimport Search from \"../Routes/Search\"\r\n\r\nconst LoggedInRoutes = () => (\r\n    <Switch>\r\n        <Route exact={true} path=\"/\" component={Feed}></Route>\r\n        <Route path=\"/explore\" component={Explore}></Route>\r\n        <Route path=\"/search\" component={Search}></Route>\r\n        <Route path=\"/:username\" component={Profile}></Route>\r\n    </Switch>\r\n)\r\n\r\nconst LoggedOutRoutes = () => <Switch><Route exact={true} path=\"/\" component={Auth}></Route></Switch>\r\n\r\nconst AppRoutes = ({isLoggedIn}) => (\r\n    <Switch>\r\n        {isLoggedIn ? <LoggedInRoutes /> : <LoggedOutRoutes />}\r\n    </Switch>\r\n)\r\n\r\nAppRoutes.propTypes = {\r\n    isLoggedIn : PropTypes.bool.isRequired\r\n}\r\n\r\nexport default AppRoutes;","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Routes\\Feed.js",["163"],"import styled from \"styled-components\";\r\nimport {gql} from \"apollo-boost\";\r\nimport { useQuery } from \"react-apollo-hooks\";\r\nimport Loader from \"../Components/Loader\";\r\nimport Post from \"../Components/Post\";\r\n\r\nconst Wrapper = styled.div`\r\n    display : flex;\r\n    flex-direction : column;\r\n    justify-content : center;\r\n    align-items : center;\r\n    min-height : 70vh;\r\n`\r\nconst FEED_QUERY = gql`\r\n    {\r\n        getFeed{\r\n            id\r\n            location\r\n            caption\r\n            user{\r\n                avatar\r\n                id\r\n                username\r\n            }\r\n            files{\r\n                id\r\n                url\r\n            }\r\n            likeCounts\r\n            isLiked\r\n            commentCounts\r\n            comments{\r\n                id\r\n                text\r\n                user{\r\n                    id\r\n                    username\r\n                }\r\n            }\r\n            createdAt\r\n        }\r\n    }\r\n`\r\n\r\n\r\nexport default () => {\r\n    const {data, loading} = useQuery(FEED_QUERY);\r\n    return (\r\n        <Wrapper>\r\n            {loading && <Loader />}\r\n            {!loading && data && data.getFeed &&\r\n                data.getFeed.map(post => <Post\r\n                    key={post.id}\r\n                    id={post.id}\r\n                    location={post.location}\r\n                    caption={post.caption}\r\n                    user={post.user}\r\n                    files={post.files}\r\n                    likeCounts={post.likeCounts}\r\n                    isLiked={post.isLiked}\r\n                    comments={post.comments}\r\n                    commentCounts={post.commentCounts}\r\n                    createdAt={post.createdAt}\r\n                    ></Post>)\r\n            }\r\n        </Wrapper>\r\n    )\r\n}","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Apollo\\Client.js",[],"C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Apollo\\LocalState.js",[],"C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Input.js",[],"C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Button.js",[],"C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Hooks\\useInput.js",["164"],"import {useState} from \"react\";\r\n\r\nexport default(defaultValue) => {\r\n    const [value, setValue] = useState(defaultValue);\r\n    const onChange = (event) => {\r\n        const {\r\n            target : {value}\r\n        } = event;\r\n        setValue(value);\r\n    }\r\n    return {value, onChange};\r\n}","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Hooks\\useInputCheckingValid.js",["165"],"import {useState} from \"react\";\r\n\r\nconst VALID_ICON_CLASSNAME = \"fa-check-circle\";\r\nconst INVALID_ICON_CLASSNAME = \"fa-times-circle\";\r\nconst VALIDITY_LOADING_CLASSNAME = \"fa-question-circle\";\r\n\r\nexport default(defaultValue, checkValid) => {\r\n    if (typeof checkValid !== \"function\"){\r\n        checkValid = () => true;\r\n    }\r\n    const [value, setValue] = useState(defaultValue);\r\n    const onChange = async(event) => {\r\n        const {\r\n            target : {value}\r\n        } = event;\r\n        setValue(value);\r\n        if (!event.target.nextSibling){\r\n            return\r\n        }\r\n        const inputValidIcon = event.target.nextSibling.querySelector(\"i\");\r\n        if (!inputValidIcon){\r\n            return\r\n        }\r\n        setTimeout(async() => {\r\n            if (value === event.target.value){\r\n                inputValidIcon.classList.remove(VALID_ICON_CLASSNAME);\r\n                inputValidIcon.classList.remove(INVALID_ICON_CLASSNAME);\r\n                inputValidIcon.classList.add(VALIDITY_LOADING_CLASSNAME);\r\n                if(event.target.value === \"\"){\r\n                    inputValidIcon.classList.remove(VALID_ICON_CLASSNAME);\r\n                    inputValidIcon.classList.remove(INVALID_ICON_CLASSNAME);\r\n                    inputValidIcon.classList.remove(VALIDITY_LOADING_CLASSNAME);\r\n                } else if (await checkValid(event.target.value)){\r\n                    inputValidIcon.classList.add(VALID_ICON_CLASSNAME);\r\n                    inputValidIcon.classList.remove(INVALID_ICON_CLASSNAME);\r\n                    inputValidIcon.classList.remove(VALIDITY_LOADING_CLASSNAME);\r\n                    event.target.classList.add(\"valid\");\r\n                } else{\r\n                    inputValidIcon.classList.add(INVALID_ICON_CLASSNAME);\r\n                    inputValidIcon.classList.remove(VALID_ICON_CLASSNAME);\r\n                    inputValidIcon.classList.remove(VALIDITY_LOADING_CLASSNAME);\r\n                }\r\n            }\r\n        }, 100);\r\n    }\r\n    return {value, onChange};\r\n}","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Routes\\Auth\\index.js",[],"C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Routes\\Auth\\AuthContainer.js",["166","167"],"import {useState} from \"react\";\r\nimport AuthPresenter from \"./AuthPresenter\";\r\nimport useInput from \"../../Hooks/useInput\";\r\nimport useInputCheckingValid from \"../../Hooks/useInputCheckingValid\";\r\nimport {  validateEmail} from \"./AuthInputValidators\";\r\nimport { useMutation, useQuery } from \"react-apollo-hooks\";\r\nimport { CHECK_USERNAME, CONFIRM_SECRET, CREATE_ACCOUNT, LOCAL_LOG_IN, LOG_IN } from \"./AuthQueries\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nconst VALID_INPUT_CLASSNAME = \"valid\";\r\n\r\nexport default () => {\r\n    const {fetchMore} = useQuery(CHECK_USERNAME, {variables : {username : \"\"}});\r\n    const validateUsername = async(username) => {\r\n        if (username.length < 4){\r\n            return false;\r\n        }\r\n        const {data} = await fetchMore({\r\n            variables : {\r\n                username\r\n            },\r\n            updateQuery(){\r\n\r\n            }\r\n        });\r\n        return data.checkUsernameValid;\r\n    }\r\n    const [action ,setAction] = useState(\"login\");\r\n    const emailLogin = useInput(\"\");\r\n    const usernameJoin = useInputCheckingValid(\"\", validateUsername);\r\n    const emailJoin = useInputCheckingValid(\"\", validateEmail);\r\n    const nameJoin = useInputCheckingValid(\"\");\r\n    const secretKey = useInput(\"\");\r\n    const [requestSecret] = useMutation(LOG_IN, {\r\n        variables : {email : emailLogin.value},\r\n        update : (_, {data}) => {\r\n            const {requestSecret} = data;\r\n            if (requestSecret){\r\n                toast.success(\"We have sent a secret key to your email, please check\");\r\n                setAction(\"confirm\");\r\n            } else{\r\n                toast.error(\"Please check your email address\")\r\n            }\r\n        }\r\n    });\r\n    const [createAccount] = useMutation(CREATE_ACCOUNT, {\r\n        variables : {\r\n            username : usernameJoin.value,\r\n            name : nameJoin.value,\r\n            email : emailJoin.value\r\n        },\r\n        update : (_, {data}) => {\r\n            const {createAccount} = data;\r\n            if (createAccount){\r\n                toast.success(\"We have sent a secret key to your email, please check\");\r\n                setAction(\"confirm\");\r\n            } else {\r\n                toast.error(\"The email is already being used\");\r\n            }\r\n        }\r\n    })\r\n    const [confirmSecretMutation] = useMutation(CONFIRM_SECRET, {\r\n        variables : {\r\n            secret : secretKey.value,\r\n            email : emailLogin.value\r\n        }\r\n    });\r\n    const [localLogInMutation] = useMutation(LOCAL_LOG_IN);\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        if (action === \"login\"){\r\n            if (validateEmail(emailLogin.value)){\r\n                try{\r\n                    await requestSecret();\r\n                } catch{\r\n                    toast.error(\"Couldn't request secret key, try again\")\r\n                }\r\n            } else {\r\n                toast.error(\"Please type a valid email address\")\r\n            }\r\n        } else if (action ===\"signUp\") {\r\n            const [email, name, username] = event.target.querySelectorAll(\"input\");\r\n            if (!email.classList.contains(VALID_INPUT_CLASSNAME)){\r\n                toast.error(\"Please type a valid email address\");\r\n            } else if (!username.classList.contains(VALID_INPUT_CLASSNAME)){\r\n                if (username.value.length < 4){\r\n                    toast.error(\"Username should have at least 4 characters\");\r\n                } else{\r\n                    toast.error(\"The username is being used\");\r\n                }\r\n            } else {\r\n                createAccount();\r\n            }\r\n        } else { //confirm\r\n            if (secretKey.value !== \"\"){\r\n                const {\r\n                    data : {confirmSecret : token}\r\n                } = await confirmSecretMutation();\r\n                if (token !== \"\" && token !== undefined){\r\n                    localLogInMutation({variables : {token}})\r\n                } else{\r\n                    toast.error(\"Please check your secret key\")\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n    return (\r\n        <AuthPresenter\r\n            setAction={setAction}\r\n            action={action}\r\n            onSubmit={onSubmit}\r\n            emailLogin={emailLogin}\r\n            usernameJoin={usernameJoin}\r\n            emailJoin={emailJoin}\r\n            nameJoin={nameJoin}\r\n            secretKey={secretKey}\r\n            requestSecret={requestSecret}\r\n        />\r\n    )\r\n}","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Routes\\Auth\\AuthPresenter.js",["168"],"import styled from  \"styled-components\";\r\nimport Input from \"../../Components/Input\"\r\nimport Button from \"../../Components/Button\"\r\nimport useTimer from \"../../Hooks/useTimer\";\r\n\r\nconst Wrapper = styled.div`\r\n    min-height : 80vh;\r\n    display : flex;\r\n    flex-direction : column;\r\n    align-items : center;\r\n    justify-content : center;\r\n`;\r\n\r\nconst Box = styled.div`\r\n    ${props => props.theme.whiteBox}\r\n`;\r\n\r\nconst Form = styled(Box)`\r\n    padding : 20px 40px;\r\n    width : 300px;\r\n    form{\r\n        display : flex;\r\n        flex-direction : column;\r\n        jutify-content : center;\r\n        input {\r\n            width : 100%;\r\n            margin : 3.5px 0px;\r\n        }\r\n        button{\r\n            margin-top : 20px;\r\n            &:hover{\r\n                cursor : pointer;\r\n            }\r\n        }\r\n    }\r\n\r\n`\r\nconst FormHeader = styled.h1`\r\n    color : ${props => props.theme.blackColor};\r\n    font-size : 40px;\r\n    font-family: 'Kaushan Script', cursive;\r\n    margin-bottom : 28px;\r\n    text-align : center;\r\n`\r\nconst InputBar = styled.div`\r\n    position : relative;\r\n`\r\nconst ValidIcon = styled.i`\r\n    position : absolute;\r\n    right : -30px;\r\n    top : 11px;\r\n    font-size : 20px;\r\n    i.fa-check-circle{\r\n        color : ${props => props.theme.greenColor}\r\n    }\r\n    i.fa-times-circle{\r\n        color : ${props => props.theme.redColor}\r\n    }\r\n    i.fa-question-circle, i.fa-undo{\r\n        color : ${props => props.theme.lightGrayColor}\r\n    }\r\n    i.fa-undo:hover{\r\n        cursor : pointer;\r\n        color : ${props => props.theme.darkGrayColor}\r\n    }\r\n`\r\n\r\nconst InputValid = () => {\r\n    return (\r\n        <ValidIcon>\r\n            <i className=\"far\"></i>\r\n        </ValidIcon>\r\n    )\r\n}\r\n\r\nconst ResendSecret = ({onClick}) => {\r\n    return (\r\n        <ValidIcon  onClick={onClick}>\r\n            <i className=\"fas fa-undo resend-secret\"></i>\r\n        </ValidIcon>\r\n    )\r\n}\r\n\r\nconst TimeLimit = styled.div`\r\n    position : absolute;\r\n    right : 10px;\r\n    top : 15px;\r\n    font-size : 12px;\r\n    color : ${props => props.theme.redColor}\r\n`\r\n\r\nconst StateChanger = styled(Box)`\r\n    display : flex;\r\n    justify-content : center;\r\n    align-items : center;\r\n    padding : 17px 0px;\r\n    width : 300px;\r\n    margin-top : 10px;\r\n    font-size : 13px;\r\n`\r\n\r\nconst Link = styled.span`\r\n    color: ${props => props.theme.blueColor};\r\n    cursor: pointer;\r\n`\r\n\r\n\r\nexport default ({\r\n    action,\r\n    setAction,\r\n    onSubmit,\r\n    emailLogin,\r\n    usernameJoin,\r\n    emailJoin,\r\n    nameJoin,\r\n    secretKey,\r\n    requestSecret\r\n}) => {\r\n    const {element : timer, resetTime} = useTimer(300);\r\n    const resendSecret = async(event) => {\r\n        await requestSecret();\r\n        resetTime();\r\n    }\r\n    return (\r\n    <Wrapper>\r\n        <Form>\r\n            <FormHeader className=\"no-drag\">\r\n                Instagram\r\n            </FormHeader>\r\n            {action === \"login\" && (\r\n                <form onSubmit={onSubmit}>\r\n                    <Input placeholder=\"email\" value=\"\" required={true} {...emailLogin} type=\"email\"></Input>            \r\n                    <Button text=\"Login\"/>\r\n                </form>\r\n            )}\r\n            {action === \"signUp\" && (\r\n                    <form onSubmit={onSubmit}>\r\n                        <InputBar>\r\n                            <Input placeholder=\"email\" value=\"\" required={true} {...emailJoin} type=\"email\"></Input>\r\n                            <InputValid></InputValid>\r\n                        </InputBar>\r\n                        <InputBar>\r\n                            <Input placeholder=\"name\" value=\"\" required={true} {...nameJoin}></Input>\r\n                            <InputValid></InputValid>\r\n                        </InputBar>\r\n                        <InputBar>\r\n                            <Input placeholder=\"username\" value=\"\" required={true} {...usernameJoin} maxlength=\"20\"></Input>\r\n                            <InputValid></InputValid>\r\n                        </InputBar>\r\n                        <Button text=\"Sign up\"/>\r\n                    </form>\r\n                )\r\n            }\r\n            {action === \"confirm\" && (\r\n                <form onSubmit={onSubmit}>\r\n                    <InputBar>\r\n                        <Input placeholder=\"Paste your secret key\" value=\"\" required={true} {...secretKey}></Input>\r\n                        <TimeLimit ref={timer}></TimeLimit>\r\n                        <ResendSecret onClick={resendSecret}></ResendSecret>\r\n                    </InputBar>\r\n                    <Button text=\"Confirm\"/>\r\n                </form>\r\n            )}       \r\n        </Form>\r\n        {action !== \"confirm\" && (\r\n            <StateChanger>\r\n                {action === \"login\"\r\n                    ? (\r\n                        <>\r\n                            Don't have an account?&nbsp;&nbsp;\r\n                            <Link onClick={() => setAction(\"signUp\")}>Sign up</Link>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            Do you have an account?&nbsp;&nbsp;\r\n                            <Link onClick={() => setAction(\"login\")}>Login</Link>\r\n                        </>\r\n                    )\r\n                }\r\n            </StateChanger>\r\n        )}\r\n    </Wrapper>\r\n    )}\r\n// )","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Routes\\Auth\\AuthInputValidators.js",[],"C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Routes\\Auth\\AuthQueries.js",[],"C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Footer.js",["169"],"import styled from \"styled-components\";\r\n\r\nconst Footer = styled.div`\r\n    display : flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-transform: uppercase;\r\n    font-weight: 600;\r\n    font-size: 12px;\r\n    min-height : 10vh;\r\n    opacity : 0.5;\r\n    margin : 20px 0px;\r\n`\r\nexport default () => (\r\n    <Footer className=\"no-drag\">© created by aroundthistime</Footer>\r\n)","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Hooks\\useTimer.js",["170","171"],"import { useEffect, useRef} from \"react\"\r\n\r\nconst formatTime = (seconds) => {\r\n    if (seconds < 0){\r\n        return \"0:00\";\r\n    }\r\n    let hours;\r\n    let minutes = 0;\r\n    if (seconds >= 3600){\r\n        hours = parseInt(seconds / 3600);\r\n        seconds %= 3600;\r\n    }\r\n    if (seconds >= 60){\r\n        minutes = parseInt(seconds / 60);\r\n        seconds %= 60;\r\n    }\r\n    if (hours){\r\n        if (minutes < 10){\r\n            minutes = `0${minutes}`;\r\n        }\r\n        if (seconds < 10){\r\n            seconds = `0${seconds}`\r\n        }\r\n        return `${hours}:${minutes}:${seconds}`\r\n    } else{\r\n        if (seconds < 10){\r\n            return `${minutes}:0${seconds}`\r\n        } else{\r\n            return `${minutes}:${seconds}`\r\n        }\r\n    } \r\n}\r\n\r\nconst unformatTime = (timeStr) => {\r\n    let time = 0;\r\n    const timeTokens = timeStr.split(\":\");\r\n    timeTokens.forEach((timeToken, index) => {\r\n        const timeUnit = timeTokens.length - index \r\n        if (timeUnit === 3){//hours\r\n            time += parseInt(timeToken) * 60 * 60\r\n        } else if(timeUnit === 2){//minutes\r\n            time += parseInt(timeToken) * 60\r\n        } else{\r\n            time += parseInt(timeToken)\r\n        }\r\n    })\r\n    return time;\r\n}\r\n\r\nexport default (defaultValue) => {\r\n    const element = useRef();\r\n    const resetTime = (event) => {\r\n        if (element.current){\r\n            element.current.innerText = formatTime(defaultValue);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        let timeInterval;\r\n        if (element.current){\r\n            element.current.innerText = formatTime(defaultValue);\r\n            timeInterval = setInterval(() => {\r\n                const currentTime = unformatTime(element.current.innerText);\r\n                if (currentTime <= 1){\r\n                    clearInterval(timeInterval);\r\n                }\r\n                element.current.innerText = formatTime(currentTime - 1);\r\n            }, 1000);\r\n        }\r\n        return () => {\r\n            if (timeInterval){\r\n                clearInterval(timeInterval)\r\n            }\r\n        }\r\n    }, [element.current])\r\n    return {element, resetTime};\r\n}","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Header.js",[],"C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Icons.js",[],"C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Routes\\Profile.js",["172"],"export default () => \"Profile\";","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Routes\\Explore.js",["173"],"export default () => \"explore\";","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Routes\\Search.js",["174"],"export default () => \"Search\";","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Loader.js",["175"],"import styled, { keyframes } from \"styled-components\";\r\nimport { Logo } from \"./Icons\";\r\n\r\nconst Animation = keyframes`\r\n    0% {\r\n        opacity : 0.15;\r\n    }\r\n    50% {\r\n        opacity : 0.4;\r\n    }\r\n    100%{\r\n        opacity : 0.15;\r\n    }\r\n`\r\n\r\nconst Loader = styled.div`\r\n    animation : ${Animation} 1.8s linear infinite;\r\n`;\r\n\r\nexport default () => (\r\n    <Loader><Logo size=\"50\"></Logo></Loader>\r\n)","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Routes\\Post.js",["176"],"C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Avatar.js",[],"C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Post\\index.js",[],"C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Post\\PostContainer.js",["177"],"C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Post\\PostPresenter.js",["178"],"import styled, { css, keyframes } from \"styled-components\";\r\nimport PropTypes from \"prop-types\"\r\nimport TextareaAutosize from \"react-autosize-textarea\";\r\nimport { formatDate } from \"../../utils\";\r\nimport Avatar from \"../Avatar\";\r\nimport { HeartEmpty, HeartFull, SpeechBubble } from \"../Icons\";\r\nimport Username from \"../Username\";\r\n\r\nconst Box = styled.div`\r\n    ${props => props.theme.whiteBox}\r\n`;\r\n\r\nconst Post = styled(Box)`\r\n    width : 100%;\r\n    max-width : 600px;\r\n    margin-bottom : 25px;\r\n    -ms-user-select: none;\r\n    -moz-user-select: -moz-none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    user-select: none;\r\n`\r\n\r\nconst PostHeader = styled.div`\r\n    padding : 15px;\r\n    background-color : white;\r\n    display : flex;\r\n    align-items : center;\r\n`\r\n\r\nconst HeaderColumn = styled.div`\r\n    display : flex;\r\n    flex-direction : column;\r\n    justify-content : space-between;\r\n    &:nth-child(1){\r\n        margin-right : 11px;\r\n    }\r\n`\r\n\r\nconst LocationText = styled.p`\r\n    opacity : 0.5;\r\n    font-size : 13px;\r\n    cursor : pointer;\r\n`\r\n\r\nconst Files = styled.div`\r\n    position : relative;\r\n    padding-top : 100%;\r\n    overflow : hidden;\r\n    width : 100%;\r\n    height : 100%;\r\n`;\r\n\r\nconst slideRightToCenter = keyframes`\r\n    from{\r\n        transform : translateX(100%);\r\n    }\r\n    to{\r\n        transform : none;\r\n    }\r\n`\r\n\r\nconst slideCenterToLeft = keyframes`\r\n    from{\r\n        transform : translateX(-100%);\r\n    }\r\n    to{\r\n        transform : translateX(-200%);\r\n    }\r\n\r\n`\r\n\r\nconst slideLeftToCenter = keyframes`\r\n    from{\r\n        transform : translateX(-100%);\r\n    }\r\n    to{\r\n        transform : none;\r\n    }\r\n`\r\n\r\nconst slideCenterToRight = keyframes`\r\n    from{\r\n        transform : translateX(-100%);\r\n    }\r\n    to{\r\n        transform : none;\r\n    }\r\n`\r\n\r\n\r\nconst slideStyles = (isCurrent, isPrev, direction, firstLoaded) => {\r\n    if (isCurrent){\r\n        if (!firstLoaded){\r\n            if (direction === \"left\"){\r\n                return css`animation : ${slideLeftToCenter} 0.3s ease-out;`\r\n            } else{\r\n                return css`animation : ${slideRightToCenter} 0.3s ease-out;`\r\n            }    \r\n        } else{\r\n            return css`animation : none;`\r\n        }\r\n    } else if (isPrev){\r\n        if (direction === \"left\"){\r\n            return css`animation : ${slideCenterToRight} 0.3s ease-out;`\r\n        } else {\r\n            return css`animation : ${slideCenterToLeft} 0.3s ease-out;`\r\n        }\r\n    } else{\r\n        return css`animation : none;`\r\n    }\r\n}\r\n\r\nconst File = styled.img`\r\n    position : absolute;\r\n    top : 0;\r\n    left : 100%;\r\n    \r\n    &.current{\r\n        left : 0;\r\n    }\r\n    width : 100%;\r\n    height : 100%;\r\n    object-fit : cover;\r\n    ${props => slideStyles(props.isCurrent, props.isPrev, props.direction, props.firstLoaded)}\r\n`\r\n\r\nconst SliderContainer = styled.button`\r\n    position : absolute;\r\n    display : flex;\r\n    justify-content : center;\r\n    align-items : center;\r\n    width : 25px;\r\n    height : 25px;\r\n    opacity : 0.5;\r\n    background-color : white;\r\n    color : gray;\r\n    border-radius : 50%;\r\n    border : none;\r\n    top : 50%;\r\n    cursor : pointer; \r\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;    &.left{\r\n        left : 20px;\r\n    }\r\n    &.right{\r\n        right : 20px;\r\n    }\r\n    &.disabled{\r\n        display : none;\r\n    }\r\n    &:focus{\r\n        outline : none;\r\n        border : none;\r\n    }\r\n`\r\nconst Slider = ({isLeft, refItem}) => \r\n    <SliderContainer className={isLeft ? \"left disabled\" : \"right\"} ref={refItem}>\r\n        {isLeft ?\r\n            (<i className=\"fas fa-chevron-left\"></i>) :\r\n            (<i className=\"fas fa-chevron-right\"></i>)\r\n        }\r\n    </SliderContainer>\r\n\r\nconst heartPopupAnimation = keyframes`\r\n    0%{\r\n        transform : none;\r\n    }\r\n    10%{\r\n        transform : scale(1.8);\r\n    }\r\n    11%{\r\n        transform : scale(1.7);\r\n    }\r\n    90%{\r\n        transform : scale(1.7);\r\n    }\r\n    100%{\r\n        transform : scale(0.1);\r\n    }\r\n`\r\n\r\nconst HeartPopup = styled.div`\r\n    position : absolute;\r\n    top : 50%;\r\n    left : 50%;\r\n    margin-top : -25px;\r\n    margin-left : -25px;\r\n    opacity : 0.8;\r\n    animation : ${heartPopupAnimation} 1.5s linear;\r\n`\r\n\r\nconst PostInfos = styled.div`\r\n    padding : 10px 15px;\r\n    max-width : 100%;\r\n`\r\nconst Button = styled.span`\r\n    cursor : pointer;\r\n`\r\n\r\nconst Buttons = styled.div`\r\n    display : flex;\r\n    margin-bottom : 10px;\r\n    ${Button} {\r\n        &:first-child{\r\n            margin-right : 20px;\r\n        }\r\n    }\r\n`\r\n\r\nconst PostContent = styled.div`\r\n    display : flex;\r\n    p{\r\n        margin-right : 5px;\r\n    }\r\n    margin-bottom : 15px;\r\n`\r\nconst PostComment = styled.div`\r\n    display : flex;\r\n    p{\r\n        margin-right : 5px;\r\n    }\r\n    margin-bottom : 5px;\r\n`\r\n\r\nconst ContentText = styled.div`\r\n    font-size : 14px;\r\n    font-family: 'Quicksand', sans-serif;\r\n    max-width : 100%;\r\n    word-break:break-all;\r\n`\r\n\r\nconst CommentCountsText = styled.p`\r\n    font-size : 14px;\r\n    opacity : 0.5;\r\n    margin-bottom : 10px;\r\n    cursor : pointer;\r\n`\r\n\r\nconst PostTimestamp = styled.p`\r\n    font-size : 12px;\r\n    opacity : 0.65;\r\n    font-family: 'Quicksand', sans-serif;\r\n    margin-bottom : 10px;\r\n`\r\n\r\nconst NewComment = styled.div`\r\n    display : flex;\r\n    align-items : center;\r\n    border-top : ${props => props.theme.boxBorder};\r\n`\r\n\r\nconst InputContainer = styled(TextareaAutosize)`\r\n    border : none;\r\n    padding : 20px 15px;\r\n    width : 250%;\r\n    outline : none;\r\n    font-size : 15px;\r\n    resize: none;\r\n    &::placeholder{\r\n        opacity : 0.6;\r\n    }\r\n    &:focus{\r\n        outline : none;\r\n    }\r\n`;\r\n\r\nconst InputBtn = styled.button`\r\n    border : none;\r\n    outline : none;\r\n    cursor : pointer;\r\n    height : 20px;\r\n    font-weight : 600;\r\n    color : ${props => props.theme.blueColor};\r\n    background : none;\r\n    &.disabled{\r\n        opacity : 0.4;\r\n    }\r\n`\r\n\r\nconst CommentInput = ({\r\n    placeholder,\r\n    required=true,\r\n    value,\r\n    onChange,\r\n    type=\"text\",\r\n    maxlength=524288,\r\n    className\r\n}) => (\r\n    <InputContainer\r\n        placeholder={placeholder}\r\n        required={required}\r\n        value={value}\r\n        onChange={onChange}\r\n        type={type}    \r\n        maxLength={maxlength}\r\n        className={className}\r\n    />\r\n)\r\n\r\nCommentInput.propTypes = {\r\n    placeholder : PropTypes.string.isRequired,\r\n    required : PropTypes.bool.isRequired,\r\n    value : PropTypes.string.isRequired,\r\n    onChange : PropTypes.func.isRequired,\r\n    type : PropTypes.string,\r\n    classname : PropTypes.string\r\n}\r\n\r\nconst checkIsPrev = (index, current, direction) => {\r\n    if (direction === \"right\"){\r\n        return index === current - 1\r\n    } else if (direction === \"left\"){\r\n        return index === current + 1\r\n    } else{\r\n        return false;\r\n    }\r\n}\r\n\r\nconst getFileClassName= (isCurrent, isPrev) => {\r\n    if (isCurrent) {\r\n        return \"no-drag current\"\r\n    } else if (isPrev){\r\n        return \"no-drag prev\"\r\n    } else{\r\n        return \"no-drag\"\r\n    }\r\n}\r\n\r\nexport default ({\r\n    id,\r\n    location,\r\n    caption,\r\n    user,\r\n    files,\r\n    likeCounts,\r\n    isLiked,\r\n    toggleLike,\r\n    pressLike,\r\n    justPressedLike,\r\n    comments,\r\n    commentCounts,\r\n    createdAt,\r\n    newComment,\r\n    currentItem,\r\n    direction,\r\n    left,\r\n    right\r\n}) => (\r\n    <Post>\r\n        <PostHeader>\r\n            <HeaderColumn>\r\n                <Avatar src={user.avatar} size={30}/>\r\n            </HeaderColumn>\r\n            <HeaderColumn>\r\n                <Username username={user.username}></Username>\r\n                <LocationText>{location}</LocationText>\r\n            </HeaderColumn>\r\n        </PostHeader>\r\n        <Files>\r\n            {files && files.map((file, index) => {\r\n                const isCurrent = currentItem === index;\r\n                const isPrev = checkIsPrev(index, currentItem, direction)\r\n                return (\r\n                        <File\r\n                            id={file.id}\r\n                            key={file.id} \r\n                            src={file.url}\r\n                            isCurrent={isCurrent}\r\n                            isPrev={isPrev}\r\n                            className={getFileClassName(isCurrent, isPrev)}\r\n                            direction={direction}\r\n                            firstLoaded={!direction}\r\n                            onDoubleClick={pressLike}\r\n                />)\r\n            })}\r\n            {files.length > 1 && (\r\n                <>\r\n                    <Slider isLeft={true} refItem={left} />\r\n                    <Slider isLeft={false} refItem={right} />\r\n                </>\r\n            )}\r\n            {isLiked && justPressedLike && (\r\n                <HeartPopup>\r\n                    <HeartFull size={50} fill={\"white\"}/>\r\n                </HeartPopup>\r\n            )}\r\n        </Files>\r\n        <PostInfos>\r\n            <Buttons>\r\n                <Button onClick={toggleLike}>\r\n                    {isLiked ? <HeartFull /> : <HeartEmpty />}\r\n                </Button>\r\n                <Button>\r\n                    <SpeechBubble></SpeechBubble>\r\n                </Button>\r\n            </Buttons>\r\n            <PostContent>\r\n                <Username username={user.username}></Username>\r\n                <ContentText>{caption}</ContentText>\r\n            </PostContent>\r\n            {comments.length > 1 && (\r\n            <CommentCountsText>{`View all ${commentCounts} comments`}</CommentCountsText>\r\n            )}\r\n            {comments.length > 0 && (\r\n                <PostComment>\r\n                    <Username username={comments[comments.length - 1].user.username}></Username>\r\n                    <ContentText>{comments[comments.length - 1].text}</ContentText>\r\n                </PostComment>\r\n            )}\r\n            <PostTimestamp>{formatDate(createdAt)}</PostTimestamp>\r\n        </PostInfos>\r\n        <form>\r\n            <NewComment>\r\n                <CommentInput {...newComment} placeholder=\"Add a comment...\" required={true}></CommentInput>\r\n                <InputBtn className=\"disabled\">POST</InputBtn>\r\n            </NewComment>\r\n        </form>\r\n        \r\n        \r\n    </Post>\r\n)","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\utils.js",[],"C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Username.js",["179"],"import PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst UsernameText = styled.p`\r\n    font-weight : 600;\r\n    font-size : 14px;\r\n    margin-bottom : 5px;\r\n    cursor : pointer;\r\n    color : black;\r\n`\r\nconst Username = ({username}) => (\r\n    <Link to={`/${username}`}>\r\n        <UsernameText className=\"no-drag\">{username}</UsernameText>\r\n    </Link>\r\n)\r\n\r\n\r\nexport default Username;","C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Components\\Post\\PostQueries.js",[],"C:\\Users\\유동환\\OneDrive\\Desktop\\Git\\instargram_clone_frontend\\src\\Hooks\\useSlide.js",["180","181","182"],"import { useEffect, useRef, useState } from \"react\";\r\n\r\nconst RIGHT = \"right\";\r\nconst LEFT = \"left\";\r\n\r\nexport const useSlide = (lastIndex) => {\r\n    const [slideObj, setSlideObj] = useState({\r\n        currentItem : 0,\r\n        direction : null\r\n    });\r\n    const left = useRef();\r\n    const right = useRef();\r\n    const slideLeft = (event) => {\r\n        event.preventDefault();\r\n        const {currentItem} = slideObj;\r\n        if (currentItem === 1){\r\n            setSlideObj({\r\n                currentItem : 0,\r\n                direction : LEFT\r\n            })\r\n            right.current.classList.remove(\"disabled\");\r\n            left.current.classList.add(\"disabled\");\r\n        } else if (currentItem > 1){\r\n            setSlideObj({\r\n                currentItem : currentItem - 1,\r\n                direction : LEFT\r\n            })\r\n            right.current.classList.remove(\"disabled\");\r\n            left.current.classList.remove(\"disabled\");\r\n        }\r\n    }\r\n    const slideRight = (event) => {\r\n        event.preventDefault();\r\n        const {currentItem} = slideObj;\r\n        if (currentItem === lastIndex - 1){\r\n            setSlideObj({\r\n                currentItem : lastIndex,\r\n                direction : RIGHT\r\n            })\r\n            left.current.classList.remove(\"disabled\");\r\n            right.current.classList.add(\"disabled\");\r\n        } else if (currentItem < lastIndex - 1){\r\n            setSlideObj({\r\n                currentItem : currentItem + 1,\r\n                direction : RIGHT\r\n            })\r\n            left.current.classList.remove(\"disabled\");\r\n            right.current.classList.remove(\"disabled\");\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (left.current){\r\n            left.current.addEventListener(\"click\", slideLeft)\r\n        }\r\n        if (right.current){\r\n            right.current.addEventListener(\"click\", slideRight)\r\n        }\r\n        return () => {\r\n            if (left.current){\r\n                left.current.removeEventListener(\"click\", slideLeft)\r\n            }\r\n            if (right.current){\r\n                right.current.removeEventListener(\"click\", slideRight)\r\n            }\r\n        }\r\n    }, [slideObj]);\r\n    return {slideObj, left, right}\r\n}",{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":4,"column":1,"nodeType":"189","endLine":20,"endColumn":2},{"ruleId":"190","severity":1,"message":"191","line":2,"column":23,"nodeType":"192","messageId":"193","endLine":2,"endColumn":29},{"ruleId":"187","severity":1,"message":"194","line":46,"column":1,"nodeType":"189","endLine":68,"endColumn":2},{"ruleId":"187","severity":1,"message":"194","line":3,"column":1,"nodeType":"189","endLine":12,"endColumn":2},{"ruleId":"187","severity":1,"message":"194","line":7,"column":1,"nodeType":"189","endLine":47,"endColumn":2},{"ruleId":"187","severity":1,"message":"194","line":13,"column":1,"nodeType":"189","endLine":122,"endColumn":2},{"ruleId":"190","severity":1,"message":"195","line":83,"column":27,"nodeType":"192","messageId":"193","endLine":83,"endColumn":31},{"ruleId":"187","severity":1,"message":"194","line":108,"column":1,"nodeType":"189","endLine":183,"endColumn":7},{"ruleId":"187","severity":1,"message":"194","line":14,"column":1,"nodeType":"189","endLine":16,"endColumn":2},{"ruleId":"187","severity":1,"message":"194","line":50,"column":1,"nodeType":"189","endLine":76,"endColumn":2},{"ruleId":"196","severity":1,"message":"197","line":74,"column":8,"nodeType":"198","endLine":74,"endColumn":25,"suggestions":"199"},{"ruleId":"187","severity":1,"message":"194","line":1,"column":1,"nodeType":"189","endLine":1,"endColumn":32},{"ruleId":"187","severity":1,"message":"194","line":1,"column":1,"nodeType":"189","endLine":1,"endColumn":32},{"ruleId":"187","severity":1,"message":"194","line":1,"column":1,"nodeType":"189","endLine":1,"endColumn":31},{"ruleId":"187","severity":1,"message":"194","line":20,"column":1,"nodeType":"189","endLine":22,"endColumn":2},{"ruleId":"187","severity":1,"message":"194","line":1,"column":1,"nodeType":"189","endLine":1,"endColumn":29},{"ruleId":"190","severity":1,"message":"200","line":43,"column":11,"nodeType":"192","messageId":"193","endLine":43,"endColumn":29},{"ruleId":"187","severity":1,"message":"194","line":329,"column":1,"nodeType":"189","endLine":421,"endColumn":2},{"ruleId":"190","severity":1,"message":"201","line":1,"column":8,"nodeType":"192","messageId":"193","endLine":1,"endColumn":17},{"ruleId":"196","severity":1,"message":"202","line":60,"column":22,"nodeType":"192","endLine":60,"endColumn":29},{"ruleId":"196","severity":1,"message":"203","line":63,"column":23,"nodeType":"192","endLine":63,"endColumn":30},{"ruleId":"196","severity":1,"message":"204","line":66,"column":8,"nodeType":"198","endLine":66,"endColumn":18,"suggestions":"205"},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","Assign arrow function to a variable before exporting as module default","'name' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'defaultValue'. Either include it or remove the dependency array. Mutable values like 'element.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["208"],"'addCommentMutation' is assigned a value but never used.","'PropTypes' is defined but never used.","The ref value 'left.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'left.current' to a variable inside the effect, and use that variable in the cleanup function.","The ref value 'right.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'right.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'slideLeft' and 'slideRight'. Either include them or remove the dependency array.",["209"],"no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},"Update the dependencies array to be: [defaultValue]",{"range":"214","text":"215"},"Update the dependencies array to be: [slideLeft, slideObj, slideRight]",{"range":"216","text":"217"},[2087,2104],"[defaultValue]",[2172,2182],"[slideLeft, slideObj, slideRight]"]